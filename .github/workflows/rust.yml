# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Rust

on:

  pull_request:
    branches:
    - '**'

  push:
    branches:
    - proxy-wasm-spec-0.1.0
    tags:
    - '**'

jobs:

  stable:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Update Rust
      run: |
        rustup update
        rustup target add wasm32-unknown-unknown

    - name: Build
      env:
        RUSTFLAGS: -C link-args=-S -D warnings
      run: cargo build --target=wasm32-unknown-unknown --release --all-targets

    - name: Format (clippy)
      env:
        RUSTFLAGS: -C link-args=-S -D warnings
      run: cargo clippy --target=wasm32-unknown-unknown --release --all-targets

    - name: Format (rustfmt)
      run: cargo fmt -- --check

    - name: Format (manifest)
      run: cargo verify-project

    - name: Format (addlicense)
      run: |
        go get -u github.com/google/addlicense
        export PATH=$PATH:$(go env GOPATH)/bin
        addlicense -check .

    - name: Package (docs)
      run: cargo doc --no-deps --target=wasm32-unknown-unknown

    - name: Package (publish)
      run: cargo publish --dry-run --target=wasm32-unknown-unknown

  nightly:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Update Rust
      run: |
        rustup toolchain install nightly
        rustup target add --toolchain nightly wasm32-unknown-unknown
        rustup component add --toolchain nightly clippy rustfmt

    - name: Build
      env:
        RUSTFLAGS: -C link-args=-S -D warnings
      run: cargo +nightly build --target=wasm32-unknown-unknown --release --all-targets

    - name: Format (clippy)
      env:
        RUSTFLAGS: -C link-args=-S -D warnings
      run: cargo +nightly clippy --target=wasm32-unknown-unknown --release --all-targets

    - name: Format (rustfmt)
      run: cargo +nightly fmt -- --check

    - name: Format (manifest)
      run: cargo +nightly verify-project

    - name: Format (addlicense)
      run: |
        go get -u github.com/google/addlicense
        export PATH=$PATH:$(go env GOPATH)/bin
        addlicense -check .

    - name: Package (docs)
      run: cargo +nightly doc --no-deps --target=wasm32-unknown-unknown

    - name: Package (publish)
      run: cargo +nightly publish --dry-run --target=wasm32-unknown-unknown

  docs:
    name: "Docs"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Rust"
      run: |
        rustup update stable
        rustup default stable
        rustc -vV

    - name: "Install 'wasm32-unknown-unknown'"
      run: |
        rustup target add wasm32-unknown-unknown

    - name: "Build docs"
      run: |
        cargo doc --no-deps --target=wasm32-unknown-unknown

    - name: "Publish GitHub Pages"
      if: ${{ github.event_name == 'push' && github.ref == 'proxy-wasm-spec-0.1.0' }}
      run: |
        git fetch origin gh-pages                 # By default, 'actions/checkout' only fetches branch of the commit.
        git worktree add /tmp/rustdoc gh-pages    # Checkout 'gh-pages' branch into '/tmp/rustdoc'
        rm -rf /tmp/rustdoc/*                     # Remove all files (except for hidden files, such as .git directory)
        cp -rp target/doc/* /tmp/rustdoc/
        cd /tmp/rustdoc
        git add --all                             # This adds, modifies, and removes index entries to match the working tree.
        if ! git diff --cached --exit-code ; then # There might be no changes to commit
          GIT_AUTHOR_NAME="${{ github.event.head_commit.author.name }}" \
            GIT_AUTHOR_EMAIL="${{ github.event.head_commit.author.email }}" \
            GIT_AUTHOR_DATE="${{ github.event.head_commit.timestamp }}" \
            GIT_COMMITTER_NAME="${{ github.event.head_commit.committer.name }}" \
            GIT_COMMITTER_EMAIL="${{ github.event.head_commit.committer.email }}" \
            GIT_COMMITTER_DATE="${{ github.event.head_commit.timestamp }}" \
            git commit -m "${{ github.event.head_commit.message }}"
          git push origin gh-pages
        else
          echo "There are no changes to GitHub Pages."
        fi
        git worktree remove --force /tmp/rustdoc  # Remove the working tree.

  publish:
    name: "Publish Crate"
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    needs:
    - stable
    - nightly
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Install Rust"
      run: |
        rustup update stable
        rustup default stable
        rustc -vV

    - name: "Install 'wasm32-unknown-unknown'"
      run: |
        rustup target add wasm32-unknown-unknown

    - name: "Check version"
      run: |
        version="$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[] | .version')"
        tag="${GITHUB_REF##*/}"
        if [[ "$version" != "$tag" ]]; then
          echo "Package version according to Cargo.toml ($version) is different from the Git tag ($tag). Did you forget to bump the version in Cargo.toml ?"
          exit 1
        fi

    - name: "Publish"
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        cargo publish --target=wasm32-unknown-unknown
